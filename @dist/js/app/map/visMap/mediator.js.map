{"version":3,"sources":["../../../../../src/js/app/map/visMap/mediator.js"],"names":["define","CONF","u","newPubSub","mainSocket","groups","WORKERS_DIR","ROOT","inst","extend","g","tmpl","Handlebars","templates","network","options","container","nodes","edges","nodeTypes","dataConvertor","autoResize","height","width","locale","clickToUse","configure","enabled","smooth","type","arrowStrikethrough","borderWidth","shape","color","size","font","face","layout","improvedLayout","interaction","hideEdgesOnDrag","hover","tooltipDelay","physics","t0","t1","createWorker","window","Worker","highlighter","onmessage","e","data","update","performance","now","length","console","warn","convertData","oldNodes","oldLinks","links","newData","newNodes","newEdges","Object","keys","forEach","k","node","add","id","label","name","management_ip","group","x","y","title","nodepopup","link","src","dest","isObj","source_id","to","destination_id","updateNode","newInfo","draw","postMessage","init","elementId","innerWidth","innerHeight","hW","hH","vis","DataSet","$","Network","on","changeNodePos","workerHighlight","GRAYED_OUT_COLOR","active","highlightActive","neighbourhoodHighlight","i","edge","hiddenLabel","len","originalColor","targetId","connectedNodes","connectedEdges","o","returnType","toUpdateNodes","toUpdateEdges","get","undefined","getConnectedNodes","getConnectedEdges","push","log","c","pointer","canvas","nodeNew","emit","clear","visMap"],"mappings":"AAAAA,OAAO,CAAC,aAAD,EAAgB,WAAhB,EAA6B,aAA7B,EAA4C,iBAA5C,EAA+D,UAA/D,CAAP,EAAmF,UAAUC,IAAV,EAAgBC,CAAhB,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkD;AACpI,KAAMC,cAAiBL,KAAKM,IAAtB,8BAAN;;AAEA,KAAIC,OAAON,EAAEO,MAAF,CAAUN,WAAV,CAAX;AACA,KAAIO,IAAI,EAAR;AACA,KAAIC,OAAOC,WAAWC,SAAtB;;AAEAH,GAAEI,OAAF,GAAY,EAAZ;AACAJ,GAAEK,OAAF,GAAY,EAAZ;AACAL,GAAEM,SAAF,GAAc,EAAd;AACAN,GAAEO,KAAF,GAAU,EAAV;AACAP,GAAEQ,KAAF,GAAU,EAAV;;AAEAR,GAAES,SAAF,GAAc,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,CAAd;AACAT,GAAEU,aAAF,GAAkB,EAAlB;;AAEAV,GAAEK,OAAF,GAAY;AACXM,cAAY,IADD;AAEXC,UAAQ,MAFG;AAGXC,SAAO,MAHI;AAIXC,UAAQ,IAJG;AAKZ;AACCC,cAAY,KAND;AAOXC,aAAW;AACVC,YAAS;AADC,GAPA;AAUXT,SAAO;AACNK,UAAO,CADD;AAENK,WAAQ;AACPC,UAAM,YADC,CACY;AADZ,IAFF;;AAMN;;;;;;;;;;;;;AAaAC,uBAAoB,IAnBd,CAmBmB;AAnBnB,GAVI;AA+BXb,SAAO;AACNc,gBAAa,CADP;AAENC,UAAO,KAFD;AAGNC,UAAO,SAHD;AAINC,SAAM,EAJA;AAKNC,SAAM;AACLD,UAAM,EADD;AAELE,UAAM;AAFD;AALA,GA/BI;AAyCX/B,UAAQA,MAzCG;AA0CXgC,UAAQ;AACPC,mBAAgB;AADT,GA1CG;AA6CXC,eAAa;AACZC,oBAAiB,IADL;AAEZC,UAAO,IAFK;AAGZC,iBAAc;AAHF,GA7CF;AAkDZ;AACCC,WAAS,KAnDE,CAmDI;AAnDJ,EAAZ;;AAsDA,KAAIC,EAAJ,EAAQC,EAAR;;AAEA,UAASC,YAAT,GAAwB;AACvB,MAAIC,OAAOC,MAAX,EAAmB;AAClBtC,KAAEU,aAAF,GAAkB,IAAI4B,MAAJ,CAAc1C,WAAd,uBAAlB;AACAI,KAAEuC,WAAF,GAAgB,IAAID,MAAJ,CAAc1C,WAAd,qBAAhB;;AAEAI,KAAEU,aAAF,CAAgB8B,SAAhB,GAA4B,UAAUC,CAAV,EAAa;AACzC;AACC,QAAIC,OAAOD,EAAEC,IAAb;AACA1C,MAAEO,KAAF,CAAQoC,MAAR,CAAeD,KAAKnC,KAApB;AACAP,MAAEQ,KAAF,CAAQmC,MAAR,CAAeD,KAAKlC,KAApB;AACA,IALD;;AAOAR,KAAEuC,WAAF,CAAcC,SAAd,GAA0B,UAAUC,CAAV,EAAa;AACtCN,SAAKS,YAAYC,GAAZ,EAAL;AACD;AACC,QAAIH,OAAOD,EAAEC,IAAb;AAAA,QACCnC,QAAQmC,KAAKnC,KADd;AAAA,QAECC,QAAQkC,KAAKlC,KAFd;;AAIA,QAAID,MAAMuC,MAAV,EAAkB;AACjB9C,OAAEO,KAAF,CAAQoC,MAAR,CAAeD,KAAKnC,KAApB;AACA;;AAED,QAAIC,MAAMsC,MAAV,EAAkB;AACjB9C,OAAEQ,KAAF,CAAQmC,MAAR,CAAeD,KAAKlC,KAApB;AACA;AACD,IAdD;AAeA,GA1BD,MA0BO;AACNuC,WAAQC,IAAR,CAAa,2CAAb;AACA;AACD;AACD,UAASC,WAAT,CAAqBP,IAArB,EAA2B;AAC1B,MAAIQ,WAAWR,KAAKnC,KAApB;AAAA,MACC4C,WAAWT,KAAKU,KADjB;AAAA,MAECC,UAAU,EAFX;AAAA,MAGCC,WAAW,EAHZ;AAAA,MAICC,WAAW,EAJZ;;AAMAC,SAAOC,IAAP,CAAYP,QAAZ,EAAsBQ,OAAtB,CAA8B,UAAUC,CAAV,EAAa;AAC1C,OAAIC,OAAOV,SAASS,CAAT,CAAX;;AAEA3D,KAAEO,KAAF,CAAQsD,GAAR,CAAY;AACXC,QAAIF,KAAKE,EADE;AAEXC,WAAOH,KAAKI,IAAL,IAAaJ,KAAKK,aAFd;AAGXC,WAAOlE,EAAES,SAAF,CAAYmD,KAAKzC,IAAjB,CAHI;AAIXgD,OAAGP,KAAKO,CAJG;AAKXC,OAAGR,KAAKQ,CALG;AAMXC,WAAOpE,KAAKqE,SAAL,CAAe,EAACN,MAAMJ,KAAKI,IAAZ,EAAkBF,IAAIF,KAAKE,EAA3B,EAAf;AANI,IAAZ;AASA,GAZD;AAaAN,SAAOC,IAAP,CAAYN,QAAZ,EAAsBO,OAAtB,CAA8B,UAAUC,CAAV,EAAa;AAC1C,OAAIY,OAAOpB,SAASQ,CAAT,CAAX;AAAA,OACCa,MAAMD,KAAKC,GADZ;AAAA,OAECC,OAAOF,KAAKE,IAFb;;AAIAzE,KAAEQ,KAAF,CAAQqD,GAAR,CAAY;AACX;;;AAGA,YAAQrE,EAAEkF,KAAF,CAAQF,GAAR,IAAeA,IAAIV,EAAnB,GAAwBU,OAAOD,KAAKI,SAJjC;AAKXC,QAAIpF,EAAEkF,KAAF,CAAQD,IAAR,IAAgBA,KAAKX,EAArB,GAA0BW,QAAQF,KAAKM;AALhC,IAAZ;AAOA,GAZD;;AAcAxB,UAAQ9C,KAAR,GAAgB+C,QAAhB;AACAD,UAAQ7C,KAAR,GAAgB+C,QAAhB;AACA,SAAOF,OAAP;AACA;AACD,UAASyB,UAAT,CAAoBC,OAApB,EAA6B;AAC5B/E,IAAEO,KAAF,CAAQoC,MAAR,CAAeoC,OAAf;AACA;AACD,UAASC,IAAT,CAActC,IAAd,EAAoB;AACnB;AACAA,OAAKjC,SAAL,GAAiBT,EAAES,SAAnB;AACAT,IAAEU,aAAF,CAAgBuE,WAAhB,CAA4BvC,IAA5B;;AAEA;AACA;;AAEA;AACA;AACD,UAASwC,IAAT,CAAcC,SAAd,EAAyB;AACxB,MAAItE,QAAQwB,OAAO+C,UAAnB;AAAA,MACCxE,SAASyB,OAAOgD,WADjB;AAAA,MAECC,KAAKzE,QAAQ,CAFd;AAGC0E,OAAK3E,SAAS,CAAd;;AAEDZ,IAAEO,KAAF,GAAU,IAAIiF,IAAIC,OAAR,EAAV;AACAzF,IAAEQ,KAAF,GAAU,IAAIgF,IAAIC,OAAR,EAAV;;AAEAzF,IAAEM,SAAF,GAAcoF,EAAEP,SAAF,CAAd;AACAnF,IAAEM,SAAF,CAAYM,MAAZ,CAAmByB,OAAOgD,WAA1B;;AAEArF,IAAEI,OAAF,GAAY,IAAIoF,IAAIG,OAAR,CAAgB3F,EAAEM,SAAF,CAAY,CAAZ,CAAhB,EAAgC,EAACC,OAAOP,EAAEO,KAAV,EAAiBC,OAAOR,EAAEQ,KAA1B,EAAhC,EAAkER,EAAEK,OAApE,CAAZ;AACAL,IAAEI,OAAF,CAAUwF,EAAV,CAAa,SAAb,EAAwBC,aAAxB;AACA7F,IAAEI,OAAF,CAAUwF,EAAV,CAAa,OAAb,EAAsBE,eAAtB,EAdwB,CAcgB;AACxCzD,SAAOjC,OAAP,GAAiBJ,EAAEI,OAAnB;;AAEAsF,IAAErD,MAAF,EAAUuD,EAAV,CAAa,QAAb,EAAuB,YAAY;AAClC5F,KAAEM,SAAF,CAAYM,MAAZ,CAAmByB,OAAOgD,WAA1B;AACA,GAFD;AAGA;;;;;;;;;;;;;;;;AAgBAjD;AACA;;AAGD,KAAI2D,mBAAmB,0BAAvB,CAAmD;AACnD,KAAIC,SAAS,KAAb;;AAKA,KAAIC,kBAAkB,KAAtB;AACA,UAASC,sBAAT,CAAgCzD,CAAhC,EAAmC;AAClC,MAAIP,KAAKU,YAAYC,GAAZ,EAAT;;AAEA,MAAIzC,OAAJ;AAAA,MACCG,KADD;AAAA,MAECC,KAFD;AAAA,MAGCmD,CAHD;AAAA,MAGIwC,CAHJ;AAAA,MAGOvC,IAHP;AAAA,MAGawC,IAHb;AAAA,MAGmBC,WAHnB;AAAA,MAGgCC,GAHhC;AAAA,MAGqCC,aAHrC;AAAA,MAIC9C,IAJD;AAAA,MAKC+C,QALD;AAAA,MAMCC,cAND;AAAA,MAMiBC,cANjB;AAAA,MAOCC,IAAI,EAACC,YAAY,QAAb,EAPL;AAAA,MAQCC,gBAAgB,EARjB;AAAA,MASCC,gBAAgB,EATjB;;AAYAvG,UAAQP,EAAEO,KAAF,CAAQwG,GAAR,CAAYJ,CAAZ,CAAR;AACAnG,UAAQR,EAAEQ,KAAF,CAAQuG,GAAR,CAAYJ,CAAZ,CAAR;;AAEA,MAAIlE,EAAElC,KAAF,CAAQuC,MAAR,GAAiB,CAArB,EAAwB;AACvB1C,aAAUJ,EAAEI,OAAZ;AACA6F,qBAAkB,IAAlB;AACAO,cAAW/D,EAAElC,KAAF,CAAQ,CAAR,CAAX;;AAEAkD,UAAOD,OAAOC,IAAP,CAAYlD,KAAZ,CAAP;AACA+F,SAAM7C,KAAKX,MAAX;AACA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBvC,WAAOrD,MAAOkD,KAAK0C,CAAL,CAAP,CAAP;AACAE,kBAAczC,KAAKyC,WAAnB;;AAEAzC,SAAKrC,KAAL,GAAawE,gBAAb;AACA,QAAIM,gBAAgBW,SAApB,EAA+B;AAC9BpD,UAAKyC,WAAL,GAAmBzC,KAAKG,KAAxB;AACAH,UAAKG,KAAL,GAAaiD,SAAb;AACA;AACD;;AAEDP,oBAAiBrG,QAAQ6G,iBAAR,CAA0BT,QAA1B,CAAjB,CAlBuB,CAkB+B;AACtDF,SAAMG,eAAe3D,MAArB;;AAEA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBvC,WAAOrD,MAAOkG,eAAeN,CAAf,CAAP,CAAP;AACAE,kBAAczC,KAAKyC,WAAnB;;AAEAzC,SAAKrC,KAAL,GAAayF,SAAb;AACA,QAAIX,gBAAgBW,SAApB,EAA+B;AAC9BpD,UAAKG,KAAL,GAAasC,WAAb;AACAzC,UAAKyC,WAAL,GAAmBW,SAAnB;AACA;AACD;;AAEDpD,UAAOrD,MAAMiG,QAAN,CAAP;AACAH,iBAAczC,KAAKyC,WAAnB;AACAzC,QAAKrC,KAAL,GAAayF,SAAb;AACA,OAAIX,gBAAgBW,SAApB,EAA+B;AAC9BpD,SAAKG,KAAL,GAAasC,WAAb;AACAzC,SAAKyC,WAAL,GAAmBW,SAAnB;AACA;;AAEDvD,UAAOD,OAAOC,IAAP,CAAYjD,KAAZ,CAAP;AACA8F,SAAM7C,KAAKX,MAAX;AACA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBC,WAAO5F,MAAOiD,KAAK0C,CAAL,CAAP,CAAP;AACAI,oBAAgBH,KAAKG,aAArB;AACA,QAAIA,kBAAkBS,SAAtB,EAAiC;AAChCZ,UAAKG,aAAL,GAAqBH,KAAK7E,KAA1B;AACA6E,UAAK7E,KAAL,GAAawE,gBAAb;AACA;AACD;;AAEDW,oBAAiBtG,QAAQ8G,iBAAR,CAA0BV,QAA1B,CAAjB,CAnDuB,CAmD+B;;AAEtDF,SAAMI,eAAe5D,MAArB;AACA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBC,WAAO5F,MAAOkG,eAAeP,CAAf,CAAP,CAAP;AACAI,oBAAgBH,KAAKG,aAArB;AACA,QAAIA,kBAAkBS,SAAtB,EAAiC;AAChCZ,UAAK7E,KAAL,GAAagF,aAAb;AACAH,UAAKG,aAAL,GAAqBS,SAArB;AACA;AACD;AAED,GA/DD,MA+DO,IAAIf,oBAAoB,IAAxB,EAA8B;AACpCxC,UAAOD,OAAOC,IAAP,CAAYlD,KAAZ,CAAP;AACA+F,SAAM7C,KAAKX,MAAX;AACA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBvC,WAAOrD,MAAOkD,KAAK0C,CAAL,CAAP,CAAP;AACAE,kBAAczC,KAAKyC,WAAnB;;AAEAzC,SAAKrC,KAAL,GAAayF,SAAb;AACA,QAAIX,gBAAgBW,SAApB,EAA+B;AAC9BpD,UAAKG,KAAL,GAAasC,WAAb;AACAzC,UAAKyC,WAAL,GAAmBW,SAAnB;AACA;AACD;;AAEDvD,UAAOD,OAAOC,IAAP,CAAYjD,KAAZ,CAAP;AACA8F,SAAM7C,KAAKX,MAAX;AACA,QAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBC,WAAO5F,MAAOiD,KAAK0C,CAAL,CAAP,CAAP;AACAI,oBAAgBH,KAAKG,aAArB;AACA,QAAIA,kBAAkBS,SAAtB,EAAiC;AAChCZ,UAAK7E,KAAL,GAAagF,aAAb;AACAH,UAAKG,aAAL,GAAqBS,SAArB;AACA;AACD;AACDf,qBAAkB,KAAlB;AACA;;AAEDxC,SAAOD,OAAOC,IAAP,CAAYlD,KAAZ,CAAP;AACA+F,QAAM7C,KAAKX,MAAX;AACA,OAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBU,iBAAcM,IAAd,CAAoB5G,MAAOkD,KAAK0C,CAAL,CAAP,CAApB;AACA;;AAED1C,SAAOD,OAAOC,IAAP,CAAYjD,KAAZ,CAAP;AACA8F,QAAM7C,KAAKX,MAAX;AACA,OAAKqD,IAAE,CAAP,EAAUA,IAAEG,GAAZ,EAAiBH,KAAG,CAApB,EAAuB;AACtBW,iBAAcK,IAAd,CAAoB3G,MAAOiD,KAAK0C,CAAL,CAAP,CAApB;AACA;;AAED,MAAIhE,KAAKS,YAAYC,GAAZ,EAAT;AACAE,UAAQqE,GAAR,CAAY,WAAWjF,KAAKD,EAAhB,IAAsB,gBAAlC;;AAEAlC,IAAEO,KAAF,CAAQoC,MAAR,CAAekE,aAAf;AACA7G,IAAEQ,KAAF,CAAQmC,MAAR,CAAemE,aAAf;AACA;;AAED,KAAIb,kBAAkB,KAAtB;AACA,UAASH,eAAT,CAAyBrD,CAAzB,EAA4B;;AAE3B,MAAI+D,WAAW/D,EAAElC,KAAF,CAAQ,CAAR,CAAf;AACA,MAAIH,UAAUJ,EAAEI,OAAhB;AACA,MAAIuG,IAAI,EAACC,YAAY,QAAb,EAAR;AACA,MAAIlE,OAAO;AACV4D,QAAK7D,EAAElC,KAAF,CAAQuC,MADH;AAEV0D,aAAUA,QAFA;AAGVjG,UAAOP,EAAEO,KAAF,CAAQwG,GAAR,CAAYJ,CAAZ,CAHG;AAIVnG,UAAOR,EAAEQ,KAAF,CAAQuG,GAAR,CAAYJ,CAAZ,CAJG;AAKVF,mBAAgBD,WAAWpG,QAAQ6G,iBAAR,CAA0BT,QAA1B,CAAX,GAAiD,EALvD;AAMVE,mBAAgBF,WAAWpG,QAAQ8G,iBAAR,CAA0BV,QAA1B,CAAX,GAAiD;AANvD,GAAX;;AASAtE,OAAKU,YAAYC,GAAZ,EAAL;AACA7C,IAAEuC,WAAF,CAAc0C,WAAd,CAA0BvC,IAA1B;AACA;AACD,UAASmD,aAAT,CAAuBpD,CAAvB,EAA0B;AACzB,MAAI+D,WAAW/D,EAAElC,KAAF,CAAQ,CAAR,CAAf;AACA,MAAIiG,QAAJ,EAAc;AACb,OAAI5C,OAAO5D,EAAEO,KAAF,CAAQwG,GAAR,CAAYP,QAAZ,CAAX;AACA,OAAIa,IAAI5E,EAAE6E,OAAF,CAAUC,MAAlB;AACA,OAAIC,UAAU;AACb1D,QAAI0C,QADS;AAEbrC,OAAGkD,EAAElD,CAFQ;AAGbC,OAAGiD,EAAEjD;AAHQ,IAAd;AAKAtE,QAAK2H,IAAL,CAAU,uBAAV,EAAmCD,OAAnC;AACA;AAED;;AAID1H,MAAKmD,WAAL,GAAmBA,WAAnB;AACAnD,MAAKgF,UAAL,GAAkBA,UAAlB;AACAhF,MAAKkF,IAAL,GAAYA,IAAZ;AACAlF,MAAKoF,IAAL,GAAYA,IAAZ;AACApF,MAAK4H,KAAL,GAAa,YAAY;AACxB1H,IAAEO,KAAF,CAAQmH,KAAR;AACA1H,IAAEQ,KAAF,CAAQkH,KAAR;AACA,EAHD;AAIA5H,MAAKE,CAAL,GAASA,CAAT;;AAEAqC,QAAOsF,MAAP,GAAgB3H,CAAhB;AACA,QAAOF,IAAP;AACA,CAvXD","file":"mediator.js","sourcesContent":["define([\"core/config\", \"core/util\", \"core/pubsub\", \"core/mainSocket\", \"./groups\"], function (CONF, u, newPubSub, mainSocket, groups) {\r\n\tconst WORKERS_DIR = `${CONF.ROOT}js/app/map/visMap/workers`;\r\n\t\r\n\tlet inst = u.extend( newPubSub() );\r\n\tlet g = {};\r\n\tlet tmpl = Handlebars.templates;\r\n\t\r\n\tg.network = {};\r\n\tg.options = {};\r\n\tg.container = {};\r\n\tg.nodes = {};\r\n\tg.edges = {};\r\n\t\r\n\tg.nodeTypes = [\"type0\", \"type1\", \"type2\", \"type3\", \"type4\", \"type5\", \"type6\"];\r\n\tg.dataConvertor = {};\r\n\t\r\n\tg.options = {\r\n\t\tautoResize: true,\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tlocale: \"en\",\r\n\t//\tlocales: locales,\r\n\t\tclickToUse: false,\r\n\t\tconfigure: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\tedges: {\r\n\t\t\twidth: 1,\r\n\t\t\tsmooth: {\r\n\t\t\t\ttype: \"continuous\" // \"dynamic\", \"continuous\", \"discrete\", \"diagonalCross\", \"straightCross\", \"horizontal\", \"vertical\", \"curvedCW\", \"curvedCCW\", \"cubicBezier\"\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/* arrows: {\r\n\t\t\t\tto: {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tscaleFactor: 0.6,\r\n\t\t\t\t\ttype: \"arrow\"\r\n\t\t\t\t},\r\n\t\t\t\t\"from\": {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tscaleFactor: 0.2,\r\n\t\t\t\t\ttype: \"circle\"\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t}, */\r\n\t\t\tarrowStrikethrough: true // default true\r\n\t\t},\r\n\t\tnodes: {\r\n\t\t\tborderWidth: 1,\r\n\t\t\tshape: \"dot\",\r\n\t\t\tcolor: \"#4CAF50\",\r\n\t\t\tsize: 10,\r\n\t\t\tfont: {\r\n\t\t\t\tsize: 12,\r\n\t\t\t\tface: \"Tahoma\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tgroups: groups,\r\n\t\tlayout: {\r\n\t\t\timprovedLayout: false\r\n\t\t},\r\n\t\tinteraction: {\r\n\t\t\thideEdgesOnDrag: true,\r\n\t\t\thover: true,\r\n\t\t\ttooltipDelay: 300\r\n\t\t},\r\n\t//\tmanipulation: {},\r\n\t\tphysics: false // true false\r\n\t};\r\n\t\r\n\tvar t0, t1;\r\n\t\r\n\tfunction createWorker() {\r\n\t\tif (window.Worker) {\r\n\t\t\tg.dataConvertor = new Worker(`${WORKERS_DIR}/dataConvertor.js`);\r\n\t\t\tg.highlighter = new Worker(`${WORKERS_DIR}/highlighter.js`);\r\n\t\t\t\r\n\t\t\tg.dataConvertor.onmessage = function (e) {\r\n\t\t\t//\tconsole.log(\"convert is finished.\");\r\n\t\t\t\tvar data = e.data;\r\n\t\t\t\tg.nodes.update(data.nodes);\r\n\t\t\t\tg.edges.update(data.edges);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tg.highlighter.onmessage = function (e) {\r\n\t\t\t\tt1 = performance.now();\r\n\t\t\t//\tconsole.log(\"worker is finished: \"+ (t1-t0) );\r\n\t\t\t\tvar data = e.data,\r\n\t\t\t\t\tnodes = data.nodes,\r\n\t\t\t\t\tedges = data.edges\r\n\t\t\t\t\r\n\t\t\t\tif (nodes.length) {\r\n\t\t\t\t\tg.nodes.update(data.nodes);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (edges.length) {\r\n\t\t\t\t\tg.edges.update(data.edges);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"Your browser doesn't support web workers.\");\r\n\t\t}\r\n\t}\r\n\tfunction convertData(data) {\r\n\t\tvar oldNodes = data.nodes,\r\n\t\t\toldLinks = data.links,\r\n\t\t\tnewData = {},\r\n\t\t\tnewNodes = [],\r\n\t\t\tnewEdges = [];\r\n\t\t\r\n\t\tObject.keys(oldNodes).forEach(function (k) {\r\n\t\t\tvar node = oldNodes[k];\r\n\t\t\t\r\n\t\t\tg.nodes.add({\r\n\t\t\t\tid: node.id,\r\n\t\t\t\tlabel: node.name || node.management_ip,\r\n\t\t\t\tgroup: g.nodeTypes[node.type],\r\n\t\t\t\tx: node.x,\r\n\t\t\t\ty: node.y,\r\n\t\t\t\ttitle: tmpl.nodepopup({name: node.name, id: node.id})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\t\tObject.keys(oldLinks).forEach(function (k) {\r\n\t\t\tvar link = oldLinks[k],\r\n\t\t\t\tsrc = link.src,\r\n\t\t\t\tdest = link.dest;\r\n\t\t\t\r\n\t\t\tg.edges.add({\r\n\t\t\t\t/* from: link.src.id,\r\n\t\t\t\tto: link.dest.id */\r\n\t\t\t\t\r\n\t\t\t\t\"from\": u.isObj(src) ? src.id : src || link.source_id,\r\n\t\t\t\tto: u.isObj(dest) ? dest.id : dest || link.destination_id,\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tnewData.nodes = newNodes;\r\n\t\tnewData.edges = newEdges;\r\n\t\treturn newData;\r\n\t}\r\n\tfunction updateNode(newInfo) {\r\n\t\tg.nodes.update(newInfo);\r\n\t}\r\n\tfunction draw(data) {\r\n\t\t// data = convertData(data);\r\n\t\tdata.nodeTypes = g.nodeTypes;\r\n\t\tg.dataConvertor.postMessage(data);\r\n\t\t\r\n\t\t// g.nodes.update(data.nodes);\r\n\t\t// g.edges.update(data.edges);\r\n\t\t\r\n\t\t// g.network.setData({nodes: data.nodes, edges: data.edges});\r\n\t}\r\n\tfunction init(elementId) {\r\n\t\tvar width = window.innerWidth,\r\n\t\t\theight = window.innerHeight,\r\n\t\t\thW = width / 2;\r\n\t\t\thH = height / 2;\r\n\t\t\r\n\t\tg.nodes = new vis.DataSet();\r\n\t\tg.edges = new vis.DataSet();\r\n\t\r\n\t\tg.container = $(elementId);\r\n\t\tg.container.height(window.innerHeight);\r\n\t\t\r\n\t\tg.network = new vis.Network(g.container[0], {nodes: g.nodes, edges: g.edges}, g.options);\r\n\t\tg.network.on(\"dragEnd\", changeNodePos);\r\n\t\tg.network.on(\"click\", workerHighlight); // workerHighlight neighbourhoodHighlight\r\n\t\twindow.network = g.network;\r\n\t\t\r\n\t\t$(window).on(\"resize\", function () {\r\n\t\t\tg.container.height(window.innerHeight);\r\n\t\t});\r\n\t\t/* $.ajax({\r\n\t\t\turl: \"http://localhost:3000\",\r\n\t\t\ttype: \"POST\",\r\n\t\t\tdataType: \"json\",\r\n\t\t\tdata: {\r\n\t\t\t\tx1: -1000,// -hW\r\n\t\t\t\tx2: 1000,// hW window.innerWidth,\r\n\t\t\t\ty1: -600, // -hH\r\n\t\t\t\ty2: 600 // hH window.innerHeight\r\n\t\t\t}\r\n\t\t})\r\n\t\t.done(function (data) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tt = data;\r\n\t\t\tdraw(data);\r\n\t\t}); */\r\n\t\tcreateWorker();\r\n\t}\r\n\t\r\n\t\r\n\tvar GRAYED_OUT_COLOR = \"rgba(200, 200, 200, 0.5)\"; \"rgba(150, 150, 150, 0.75)\"\r\n\tvar active = false;\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tvar highlightActive = false;\r\n\tfunction neighbourhoodHighlight(e) {\r\n\t\tvar t0 = performance.now();\r\n\t\t\r\n\t\tvar network,\r\n\t\t\tnodes,\r\n\t\t\tedges,\r\n\t\t\tk, i, node, edge, hiddenLabel, len, originalColor,\r\n\t\t\tkeys,\r\n\t\t\ttargetId,\r\n\t\t\tconnectedNodes, connectedEdges,\r\n\t\t\to = {returnType: \"Object\"},\r\n\t\t\ttoUpdateNodes = [],\r\n\t\t\ttoUpdateEdges = [];\r\n\t\t\t\r\n\t\t\r\n\t\tnodes = g.nodes.get(o);\r\n\t\tedges = g.edges.get(o);\r\n\t\t\r\n\t\tif (e.nodes.length > 0) {\r\n\t\t\tnetwork = g.network;\r\n\t\t\thighlightActive = true;\r\n\t\t\ttargetId = e.nodes[0];\r\n\t\t\t\r\n\t\t\tkeys = Object.keys(nodes);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tnode = nodes[ keys[i] ];\r\n\t\t\t\thiddenLabel = node.hiddenLabel;\r\n\t\t\t\t\r\n\t\t\t\tnode.color = GRAYED_OUT_COLOR;\r\n\t\t\t\tif (hiddenLabel === undefined) {\r\n\t\t\t\t\tnode.hiddenLabel = node.label;\r\n\t\t\t\t\tnode.label = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconnectedNodes = network.getConnectedNodes(targetId); // array of ids\r\n\t\t\tlen = connectedNodes.length;\r\n\t\t\t\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tnode = nodes[ connectedNodes[i] ];\r\n\t\t\t\thiddenLabel = node.hiddenLabel;\r\n\t\t\t\t\r\n\t\t\t\tnode.color = undefined;\r\n\t\t\t\tif (hiddenLabel !== undefined) {\r\n\t\t\t\t\tnode.label = hiddenLabel;\r\n\t\t\t\t\tnode.hiddenLabel = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tnode = nodes[targetId];\r\n\t\t\thiddenLabel = node.hiddenLabel;\r\n\t\t\tnode.color = undefined;\r\n\t\t\tif (hiddenLabel !== undefined) {\r\n\t\t\t\tnode.label = hiddenLabel;\r\n\t\t\t\tnode.hiddenLabel = undefined;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeys = Object.keys(edges);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tedge = edges[ keys[i] ];\r\n\t\t\t\toriginalColor = edge.originalColor;\r\n\t\t\t\tif (originalColor === undefined) {\r\n\t\t\t\t\tedge.originalColor = edge.color;\r\n\t\t\t\t\tedge.color = GRAYED_OUT_COLOR;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconnectedEdges = network.getConnectedEdges(targetId); // array of ids\r\n\t\t\t\r\n\t\t\tlen = connectedEdges.length;\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tedge = edges[ connectedEdges[i] ];\r\n\t\t\t\toriginalColor = edge.originalColor;\r\n\t\t\t\tif (originalColor !== undefined) {\r\n\t\t\t\t\tedge.color = originalColor;\r\n\t\t\t\t\tedge.originalColor = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (highlightActive === true) {\r\n\t\t\tkeys = Object.keys(nodes);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tnode = nodes[ keys[i] ];\r\n\t\t\t\thiddenLabel = node.hiddenLabel;\r\n\t\t\t\t\r\n\t\t\t\tnode.color = undefined;\r\n\t\t\t\tif (hiddenLabel !== undefined) {\r\n\t\t\t\t\tnode.label = hiddenLabel;\r\n\t\t\t\t\tnode.hiddenLabel = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeys = Object.keys(edges);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\t\tedge = edges[ keys[i] ];\r\n\t\t\t\toriginalColor = edge.originalColor;\r\n\t\t\t\tif (originalColor !== undefined) {\r\n\t\t\t\t\tedge.color = originalColor;\r\n\t\t\t\t\tedge.originalColor = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thighlightActive = false\r\n\t\t}\r\n\t\t\r\n\t\tkeys = Object.keys(nodes);\r\n\t\tlen = keys.length;\r\n\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\ttoUpdateNodes.push( nodes[ keys[i] ] );\r\n\t\t}\r\n\t\t\r\n\t\tkeys = Object.keys(edges);\r\n\t\tlen = keys.length;\r\n\t\tfor (i=0; i<len; i+=1) {\r\n\t\t\ttoUpdateEdges.push( edges[ keys[i] ] );\r\n\t\t}\r\n\t\t\r\n\t\tvar t1 = performance.now();\r\n\t\tconsole.log(\"took \" + (t1 - t0) + \" milliseconds.\");\r\n\t\t\r\n\t\tg.nodes.update(toUpdateNodes);\r\n\t\tg.edges.update(toUpdateEdges);\r\n\t}\r\n\t\r\n\tvar highlightActive = false;\r\n\tfunction workerHighlight(e) {\r\n\t\t\r\n\t\tvar targetId = e.nodes[0];\r\n\t\tvar network = g.network;\r\n\t\tvar o = {returnType: \"Object\"};\r\n\t\tvar data = {\r\n\t\t\tlen: e.nodes.length,\r\n\t\t\ttargetId: targetId,\r\n\t\t\tnodes: g.nodes.get(o),\r\n\t\t\tedges: g.edges.get(o),\r\n\t\t\tconnectedNodes: targetId ? network.getConnectedNodes(targetId) : [],\r\n\t\t\tconnectedEdges: targetId ? network.getConnectedEdges(targetId) : []\r\n\t\t};\r\n\t\t\r\n\t\tt0 = performance.now();\r\n\t\tg.highlighter.postMessage(data);\r\n\t}\r\n\tfunction changeNodePos(e) {\r\n\t\tlet targetId = e.nodes[0];\r\n\t\tif (targetId) {\r\n\t\t\tlet node = g.nodes.get(targetId);\r\n\t\t\tlet c = e.pointer.canvas;\r\n\t\t\tlet nodeNew = {\r\n\t\t\t\tid: targetId,\r\n\t\t\t\tx: c.x,\r\n\t\t\t\ty: c.y\r\n\t\t\t};\r\n\t\t\tinst.emit(\"node_position_changed\", nodeNew);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tinst.convertData = convertData;\r\n\tinst.updateNode = updateNode;\r\n\tinst.draw = draw;\r\n\tinst.init = init;\r\n\tinst.clear = function () {\r\n\t\tg.nodes.clear();\r\n\t\tg.edges.clear();\r\n\t};\r\n\tinst.g = g;\r\n\t\r\n\twindow.visMap = g;\r\n\treturn inst;\r\n});"]}
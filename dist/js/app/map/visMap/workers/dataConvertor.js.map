{"version":3,"sources":["../../../../../../src/js/app/map/visMap/workers/dataConvertor.js"],"names":["JS","importScripts","template","Handlebars","templates","nodepopup","self","onmessage","e","data","oldNodes","nodes","oldLinks","links","nodeTypes","newData","newNodes","newEdges","keys","i","len","node","link","src","dest","status","Object","length","push","id","label","ipManagement","name","group","type","x","y","title","isObj","source_id","to","destination_id","color","undefined","edges","postMessage","ctx","t","lastSeen","serial","manufacturer","model","v","prototype","toString","call"],"mappings":"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","file":"dataConvertor.js","sourcesContent":["const JS = \"../../../../\";\r\nimportScripts(JS+ \"lib/handlebars.runtime.min.js\")\r\nimportScripts(JS+ \"app/templates.js\");\r\n\r\n// let template = nodepopup;\r\nlet template = Handlebars.templates.nodepopup;\r\n\r\nself.onmessage = function (e) {\r\n\tvar data = e.data,\r\n\t\toldNodes = data.nodes,\r\n\t\toldLinks = data.links,\r\n\t\tnodeTypes = data.nodeTypes,\r\n\t\tnewData = {},\r\n\t\tnewNodes = [],\r\n\t\tnewEdges = [],\r\n\t\tkeys, i, len,\r\n\t\tnode, link, src, dest, status;\r\n\t\r\n\tkeys = Object.keys(oldNodes);\r\n\tlen = keys.length;\r\n\t\r\n\tfor (i=0; i<len; i+=1) {\r\n\t\tnode = oldNodes[ keys[i] ];\r\n\t\t\r\n\t\tnewNodes.push({\r\n\t\t\tid: node.id,\r\n\t\t\tlabel: node.ipManagement || node.name,\r\n\t\t\tgroup: nodeTypes[node.type],\r\n\t\t\tx: node.x,\r\n\t\t\ty: node.y,\r\n\t\t\ttitle: template(node)\r\n\t\t});\r\n\t}\r\n\t/* Object.keys(oldNodes).forEach(function (k) {\r\n\t\tvar node = oldNodes[k];\r\n\t\tnewNodes.push({\r\n\t\t\tid: node.id,\r\n\t\t\tlabel: node.name || node.management_ip,\r\n\t\t\tgroup: nodeTypes[node.type],\r\n\t\t\tx: node.x,\r\n\t\t\ty: node.y,\r\n\t\t\ttitle: template(node.name, node.id)\r\n\t\t});\r\n\t}); */\r\n\tkeys = Object.keys(oldLinks);\r\n\tlen = keys.length;\r\n\tfor (i=0; i<len; i+=1) {\r\n\t\tlink = oldLinks[ keys[i] ];\r\n\t\tsrc = link.src;\r\n\t\tdest = link.dest;\r\n\t\tstatus = link.status;\r\n\t\t\r\n\t\tnewEdges.push({\r\n\t\t\tid: link.id,\r\n\t\t\t\"from\": isObj(src) ? src.id : src || link.source_id,\r\n\t\t\tto: isObj(dest) ? dest.id : dest || link.destination_id,\r\n\t\t\tcolor:\tstatus === 0 ? \"#33691e\" : // green\r\n\t\t\t\t\tstatus === 1 ? \"#00695c\" : // cyan\r\n\t\t\t\t\tstatus === 2 ? \"#0fd600\"  : // yellow\r\n\t\t\t\t\tstatus === 3 ? \"#e65100\" : // orange\r\n\t\t\t\t\tstatus === 4 ? \"#ff1744\" : // pink\r\n\t\t\t\t\tstatus === 5 ? \"#b71c1c\" : undefined, // red\r\n\t\t});\r\n\t}\r\n\t/* Object.keys(oldLinks).forEach(function (k) {\r\n\t\tvar link = oldLinks[k],\r\n\t\t\tsrc = link.src,\r\n\t\t\tdest = link.dest,\r\n\t\t\tstatus = link.status;\r\n\t\t\r\n\t\tnewEdges.push({\r\n\t\t\tid: link.id,\r\n\t\t\t\"from\": isObj(src) ? src.id : src || link.source_id,\r\n\t\t\tto: isObj(dest) ? dest.id : dest || link.destination_id,\r\n\t\t\tcolor:\tstatus === 0 ? \"#33691e\" : // green\r\n\t\t\t\t\tstatus === 1 ? \"#00695c\" : // cyan\r\n\t\t\t\t\tstatus === 2 ? \"#0fd600\"  : // yellow\r\n\t\t\t\t\tstatus === 3 ? \"#e65100\" : // orange\r\n\t\t\t\t\tstatus === 4 ? \"#ff1744\" : // pink\r\n\t\t\t\t\tstatus === 5 ? \"#b71c1c\" : undefined, // red\r\n\t\t});\r\n\t}); */\r\n\t\r\n\tnewData.nodes = newNodes;\r\n\tnewData.edges = newEdges;\r\n\t\r\n\tpostMessage(newData);\r\n};\r\n\r\nfunction nodepopup(ctx) {\r\n\tlet t = `\r\n<table class=\"uk-table\">\r\n<tr>\r\n\t<th>Node Name</th>\r\n\t<th>Node Id</th>\r\n\t<th>IP Management</th>\r\n\t<th>Last Seen</th>\r\n\t<th>Serial</th>\r\n\t<th>Manufacturer</th>\r\n\t<th>Model</th>\r\n</tr>\r\n<tr>\r\n\t<td>${ ctx.name }</td>\r\n\t<td>${ ctx.id }</td>\r\n\t<td>${ ctx.ipManagement }</td>\r\n\t<td>${ ctx.lastSeen }</td>\r\n\t<td>${ ctx.serial }</td>\r\n\t<td>${ ctx.manufacturer }</td>\r\n\t<td>${ ctx.model }</td>\r\n</tr>\r\n</table>`;\r\n\treturn t;\r\n}\r\nfunction isObj(v) {\r\n\treturn (\r\n\t\tv &&\r\n\t\ttypeof v === 'object' &&\r\n\t\ttypeof v !== null &&\r\n\t\tObject.prototype.toString.call(v) === '[object Object]'\r\n\t) ? true : false;\r\n}"]}
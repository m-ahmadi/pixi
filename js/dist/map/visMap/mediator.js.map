{"version":3,"sources":["../../../src/map/visMap/mediator.js"],"names":["define","u","worldcup","groups","inst","network","allNodes","highlightActive","nodesDataset","vis","DataSet","nodes","edgesDataset","edges","redrawAll","container","$","options","shape","scaling","min","max","label","drawThreshold","maxVisible","font","size","face","width","color","inherit","smooth","type","physics","interaction","tooltipDelay","hideEdgesOnDrag","data","Network","height","window","innerHeight","get","returnType","on","neighbourhoodHighlight","params","length","i","j","selectedNode","degrees","nodeId","hiddenLabel","undefined","connectedNodes","getConnectedNodes","allConnectedNodes","concat","updateArray","hasOwnProperty","push","update","initGoogleMap","uluru","lat","lng","map","google","maps","Map","document","getElementById","zoom","center","marker","Marker","position","init"],"mappings":"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","file":"mediator.js","sourcesContent":["define([\"core/util\", \"./worldcup2014\", \"./groups\"], function (u, worldcup, groups) {\r\n\tlet inst = {};\r\n\t\r\n\tvar network;\r\n\tvar allNodes;\r\n\tvar highlightActive = false;\r\n\r\n\tvar nodesDataset = new vis.DataSet(worldcup.nodes); // these come from WorldCup2014.js\r\n\tvar edgesDataset = new vis.DataSet(worldcup.edges); // these come from WorldCup2014.js\r\n\r\n\tfunction redrawAll() {\r\n\t\tvar container = $(\"#map_container\");\r\n\t\tvar options = {\r\n\t\t\tnodes: {\r\n\t\t\t\tshape: \"dot\",\r\n\t\t\t\tscaling: {\r\n\t\t\t\t\tmin: 10,\r\n\t\t\t\t\tmax: 30,\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tmin: 8,\r\n\t\t\t\t\t\tmax: 30,\r\n\t\t\t\t\t\tdrawThreshold: 12,\r\n\t\t\t\t\t\tmaxVisible: 20\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfont: {\r\n\t\t\t\t\tsize: 12,\r\n\t\t\t\t\tface: \"Tahoma\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// groups: groups,\r\n\t\t\tedges: {\r\n\t\t\t\twidth: 0.15,\r\n\t\t\t\tcolor: {\r\n\t\t\t\t\tinherit: \"from\"\r\n\t\t\t\t},\r\n\t\t\t\tsmooth: {\r\n\t\t\t\t\ttype: \"continuous\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tphysics: false,\r\n\t\t\tinteraction: {\r\n\t\t\t\ttooltipDelay: 200,\r\n\t\t\t\thideEdgesOnDrag: true\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar data = {\r\n\t\t\tnodes: nodesDataset,\r\n\t\t\tedges: edgesDataset\r\n\t\t} // Note: data is coming from ./worldcup2014.js\r\n\r\n\r\n\t\tnetwork = new vis.Network(container[0], data, options);\r\n\t\tcontainer.height(window.innerHeight);\r\n\t\t// get a JSON object\r\n\t\tallNodes = nodesDataset.get({\r\n\t\t\treturnType: \"Object\"\r\n\t\t});\r\n\r\n\t\tnetwork.on(\"click\", neighbourhoodHighlight);\r\n\t}\r\n\tfunction neighbourhoodHighlight(params) {\r\n\t\t// if something is selected:\r\n\t\tif (params.nodes.length > 0) {\r\n\t\t\thighlightActive = true;\r\n\t\t\tvar i,\r\n\t\t\tj;\r\n\t\t\tvar selectedNode = params.nodes[0];\r\n\t\t\tvar degrees = 2;\r\n\r\n\t\t\t// mark all nodes as hard to read.\r\n\t\t\tfor (var nodeId in allNodes) {\r\n\t\t\t\tallNodes[nodeId].color = \"rgba(200,200,200,0.5)\";\r\n\t\t\t\tif (allNodes[nodeId].hiddenLabel === undefined) {\r\n\t\t\t\t\tallNodes[nodeId].hiddenLabel = allNodes[nodeId].label;\r\n\t\t\t\t\tallNodes[nodeId].label = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar connectedNodes = network.getConnectedNodes(selectedNode);\r\n\t\t\tvar allConnectedNodes = [];\r\n\r\n\t\t\t// get the second degree nodes\r\n\t\t\tfor (i = 1; i < degrees; i++) {\r\n\t\t\t\tfor (j = 0; j < connectedNodes.length; j++) {\r\n\t\t\t\t\tallConnectedNodes = allConnectedNodes.concat(network.getConnectedNodes(connectedNodes[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// all second degree nodes get a different color and their label back\r\n\t\t\tfor (i = 0; i < allConnectedNodes.length; i++) {\r\n\t\t\t\tallNodes[allConnectedNodes[i]].color = \"rgba(150,150,150,0.75)\";\r\n\t\t\t\tif (allNodes[allConnectedNodes[i]].hiddenLabel !== undefined) {\r\n\t\t\t\t\tallNodes[allConnectedNodes[i]].label = allNodes[allConnectedNodes[i]].hiddenLabel;\r\n\t\t\t\t\tallNodes[allConnectedNodes[i]].hiddenLabel = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// all first degree nodes get their own color and their label back\r\n\t\t\tfor (i = 0; i < connectedNodes.length; i++) {\r\n\t\t\t\tallNodes[connectedNodes[i]].color = undefined;\r\n\t\t\t\tif (allNodes[connectedNodes[i]].hiddenLabel !== undefined) {\r\n\t\t\t\t\tallNodes[connectedNodes[i]].label = allNodes[connectedNodes[i]].hiddenLabel;\r\n\t\t\t\t\tallNodes[connectedNodes[i]].hiddenLabel = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// the main node gets its own color and its label back.\r\n\t\t\tallNodes[selectedNode].color = undefined;\r\n\t\t\tif (allNodes[selectedNode].hiddenLabel !== undefined) {\r\n\t\t\t\tallNodes[selectedNode].label = allNodes[selectedNode].hiddenLabel;\r\n\t\t\t\tallNodes[selectedNode].hiddenLabel = undefined;\r\n\t\t\t}\r\n\t\t} else if (highlightActive === true) {\r\n\t\t\t// reset all nodes\r\n\t\t\tfor (var nodeId in allNodes) {\r\n\t\t\t\tallNodes[nodeId].color = undefined;\r\n\t\t\t\tif (allNodes[nodeId].hiddenLabel !== undefined) {\r\n\t\t\t\t\tallNodes[nodeId].label = allNodes[nodeId].hiddenLabel;\r\n\t\t\t\t\tallNodes[nodeId].hiddenLabel = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thighlightActive = false\r\n\t\t}\r\n\r\n\t\t// transform the object into an array\r\n\t\tvar updateArray = [];\r\n\t\tfor (nodeId in allNodes) {\r\n\t\t\tif (allNodes.hasOwnProperty(nodeId)) {\r\n\t\t\t\tupdateArray.push(allNodes[nodeId]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnodesDataset.update(updateArray);\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\tfunction initGoogleMap() {\r\n\t\tvar uluru = {lat: -25.363, lng: 131.044};\r\n        var map = new google.maps.Map(document.getElementById(\"map\"), {\r\n          zoom: 5,\r\n          center: uluru\r\n        });\r\n        var marker = new google.maps.Marker({\r\n          position: uluru,\r\n          map: map\r\n        });\r\n\t\t\r\n\t}\r\n\tinst.init = redrawAll;\r\n\treturn inst;\r\n});\r\n"]}